{% comment %}
  Section: Best Sellers (Flickity slider + BEM classes)
{% endcomment %}

{%- comment -%}
  Include Flickity assets (safe to include here; the guard prevents double init)
{%- endcomment -%}

<section class="bestsellers layout__grid-box" id="section-{{ section.id }}">
  <div class="bestsellers__container">
    <div class="bestsellers__header">
      {% if section.settings.eyebrow != blank %}
        <div class="bestsellers__eyebrow">{{ section.settings.eyebrow }}</div>
      {% endif %}
      {% if section.settings.heading != blank %}
        <h2 class="bestsellers__title">{{ section.settings.heading }}</h2>
      {% endif %}
    </div>

    <div class="bestsellers__scroller">
      {%- comment -%}
        NOTE: Each child is a Flickity "cell".
      {%- endcomment -%}
      <div
        class="bestsellers__list"
        id="bestsellers-{{ section.id }}"
        data-flickity='
          {
            "cellAlign": "left",
            "contain": true,
            "pageDots": true,
            "prevNextButtons": false,
            "groupCells": 1,
            "wrapAround": true,
            "draggable": true,
            "adaptiveHeight": true,
            "watchCSS": false
          }
        '
      >
        {% if section.settings.source == 'collection' and section.settings.collection != blank %}
          {% for product in section.settings.collection.products limit: section.settings.product_limit %}
            <div class="bestsellers__item">
              {% render 'product-card', product: product %}
            </div>
          {% endfor %}
        {% else %}
          {% for block in section.blocks %}
            {% assign product = block.settings.product %}
            {% if product %}
              <div class="bestsellers__item">
                {% render 'product-card', product: product, block: block %}
              </div>
            {% endif %}
          {% endfor %}
        {% endif %}
      </div>

      <div class="bestsellers__nav">
        <!-- Left / Previous -->
        <button
          class="bestsellers__btn bestsellers__btn--prev"
          type="button"
          aria-label="Previous"
          data-target="bestsellers-{{ section.id }}"
        >
          <svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
            <rect width="40" height="40" rx="20" fill="white"/>
            <path d="M30 20c0-.18-.07-.35-.20-.48a.68.68 0 0 0-.48-.20H13.3l4.27-4.27a.68.68 0 0 0-.96-.96l-5.43 5.43a.68.68 0 0 0 0 .96l5.43 5.43a.68.68 0 0 0 .96-.96L13.3 20.7h16.02c.18 0 .35-.07.48-.20.13-.13.20-.3.20-.48Z" fill="#161A1D"/>
          </svg>
        </button>

        <!-- Right / Next -->
        <button
          class="bestsellers__btn bestsellers__btn--next"
          type="button"
          aria-label="Next"
          data-target="bestsellers-{{ section.id }}"
        >
          <svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
            <rect width="40" height="40" rx="20" fill="white"/>
            <path d="M30 20c0-.18-.07-.35-.20-.48a.68.68 0 0 0-.48-.20H13.3l4.27-4.27a.68.68 0 0 0-.96-.96l-5.43 5.43a.68.68 0 0 0 0 .96l5.43 5.43a.68.68 0 0 0 .96-.96L13.3 20.7h16.02c.18 0 .35-.07.48-.20.13-.13.20-.3.20-.48Z"
                  fill="#161A1D"
                  transform="scale(-1,1) translate(-40,0)"/>
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>
<script>
  (function () {
    function initFlickity(root) {
      var slider = root.querySelector('.bestsellers__list');
      if (!slider || typeof Flickity === 'undefined') return;

      // Prevent double init
      if (slider._flickity) return;

      var options = {};
      try {
        options = JSON.parse(slider.getAttribute('data-flickity') || '{}');
      } catch (e) {}

      var flkty = new Flickity(slider, options);
      slider.classList.add('is-initialized');

      // External nav
      // External nav (target the specific carousel by data-target)
      function wireNav(btn, direction) {
        if (!btn) return;
        btn.addEventListener('click', function () {
          var targetId = btn.getAttribute('data-target');
          if (!targetId) return;
          var targetEl = document.getElementById(targetId);
          if (targetEl && targetEl._flickity) {
            if (direction === 'prev') targetEl._flickity.previous();
            else targetEl._flickity.next();
          }
        });
      }

      var prevBtn = root.querySelector('.bestsellers__container .bestsellers__btn--prev');
      var nextBtn = root.querySelector('.bestsellers__container .bestsellers__btn--next');
      wireNav(prevBtn, 'prev');
      wireNav(nextBtn, 'next');

      // store ref
      slider._flickity = flkty;
    }

    function destroyFlickity(root) {
      var slider = root.querySelector('.bestsellers__list');
      if (slider && slider._flickity) {
        slider._flickity.destroy();
        slider._flickity = null;
        slider.classList.remove('is-initialized');
      }
    }

    var section = document.getElementById('section-{{ section.id }}');
    if (section) {
      // If Flickity loaded already, init immediately; otherwise wait for load
      if (typeof Flickity !== 'undefined') {
        initFlickity(section);
      } else {
        window.addEventListener('load', function () {
          initFlickity(section);
        });
      }
    }

    // Theme Editor support
    document.addEventListener('shopify:section:load', function (e) {
      if (e.target && e.target.id === 'section-{{ section.id }}') initFlickity(e.target);
    });
    document.addEventListener('shopify:section:unload', function (e) {
      if (e.target && e.target.id === 'section-{{ section.id }}') destroyFlickity(e.target);
    });
  })();
</script>

{% schema %}
{
  "name": "Best sellers (carousel)",
  "settings": [
    {
      "type": "text",
      "id": "eyebrow",
      "label": "Eyebrow",
      "default": "Our Best Sellers"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "South India's most-loved snacks!"
    },
    {
      "type": "radio",
      "id": "source",
      "label": "Product source",
      "default": "collection",
      "options": [
        { "value": "collection", "label": "From a collection" },
        { "value": "manual", "label": "Manually select products" }
      ]
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection",
      "info": "Used when source is set to collection"
    },
    {
      "type": "range",
      "id": "product_limit",
      "label": "Max products to show",
      "info": "Only applies when using collection source",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 8
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "limit": 12,
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Best sellers (carousel)",
      "category": "Products"
    }
  ]
}
{% endschema %}
