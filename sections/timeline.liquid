{% comment %}
  sections/timeline.liquid
  Horizontal timeline: leftâ†’right, show all cards, overflow scroll if needed.
{% endcomment %}

<section
  id="tl-{{ section.id }}"
  class="tl timeline"
  aria-label="{{ section.settings.aria_label | default: 'Product history timeline' }}"
>
  <div class="timeline__inner page-width">
    {% if section.settings.heading != blank %}
      <h2 class="timeline__heading">{{ section.settings.heading }}</h2>
    {% endif %}

    <!-- Year buttons (jump to card) -->
    <div class="timeline__years" role="tablist" aria-label="Years">
      {% for block in section.blocks %}
        <button
          class="tl-year{% if forloop.first %} is-active{% endif %}"
          role="tab"
          data-index="{{ forloop.index0 }}"
          aria-controls="tl-{{ section.id }}-slide-{{ forloop.index0 }}"
          {{ block.shopify_attributes }}
        >
          {{ block.settings.year }}
        </button>
      {% endfor %}
    </div>

    <!-- Horizontal scroll viewport -->
    <div class="timeline__viewport" aria-live="polite">
      <div class="tl-track">
        {% for block in section.blocks %}
          <section
            id="tl-{{ section.id }}-slide-{{ forloop.index0 }}"
            class="tl-slide"
            data-year="{{ block.settings.year }}"
            {{ block.shopify_attributes }}
          >
            <div class="tl-card">
              {% if block.settings.image != blank %}
                {%- assign img = block.settings.image -%}
                <img
                  srcset="{{ img | img_url: '360x' }} 360w, {{ img | img_url: '720x' }} 720w, {{ img | img_url: '1080x' }} 1080w"
                  sizes="(min-width: 990px) 540px, 85vw"
                  src="{{ img | img_url: '720x' }}"
                  alt="{{ block.settings.image_alt | escape }}"
                  loading="lazy"
                >
              {% endif %}
              <div class="tl-card__content">
                {% if block.settings.title != blank %}
                  <h3 class="tl-card__title">{{ block.settings.title }}</h3>
                {% endif %}
                {% if block.settings.text != blank %}
                  <p class="tl-card__text">{{ block.settings.text }}</p>
                {% endif %}
              </div>
            </div>
          </section>
        {% endfor %}
      </div>
    </div>
  </div>

  <style>
    /* ---- Layout tokens ---- */
    #tl-{{ section.id }} {
      --card-min: 280px;            /* minimum card width */
      --card-max: 560px;            /* maximum card width on large screens */
      --gap: 1rem;                  /* space between cards */
      --slide-pad: {{ section.settings.slide_padding | default: '1rem' }};
    }

    /* ---- Base ---- */
    #tl-{{ section.id }} .timeline{position:relative;overflow:visible}
    #tl-{{ section.id }} .timeline__inner{position:relative}
    #tl-{{ section.id }} .timeline__heading{margin:0 0 1rem}

    /* ---- Years row ---- */
    #tl-{{ section.id }} .timeline__years{
      display:flex;gap:.5rem 1rem;align-items:center;margin-bottom:1rem;flex-wrap:wrap
    }
    #tl-{{ section.id }} .tl-year{
      background:none;border:0;font:inherit;opacity:.6;cursor:pointer;padding:.25rem .5rem;border-radius:.25rem
    }
    #tl-{{ section.id }} .tl-year:is(:hover,:focus-visible){opacity:.9;text-decoration:underline}
    #tl-{{ section.id }} .tl-year.is-active{opacity:1;font-weight:700}

    /* ---- Horizontal viewport + track ---- */
    #tl-{{ section.id }} .timeline__viewport{
      overflow-x:auto; overflow-y:visible;
      -webkit-overflow-scrolling: touch;
      scroll-snap-type: x proximity;
      scrollbar-width: thin;
      padding-bottom:.25rem;
    }
    #tl-{{ section.id }} .tl-track{
      display:flex; gap:var(--gap);
      align-items:stretch;
      /* no transform/transition: native scroll */
      padding-inline-end: .25rem;
    }

    /* ---- Slides (each card) ---- */
    #tl-{{ section.id }} .tl-slide{
      flex:0 0 auto;
      min-width: min(var(--card-max), 100%);         /* mobile: near full width */
      max-width: var(--card-max);                    /* desktop: cap width */
      scroll-snap-align: start;
      box-sizing: border-box;
      padding: var(--slide-pad);
    }

    /* ---- Card ---- */
    #tl-{{ section.id }} .tl-card{
      display:grid; gap:1rem; align-items:center;
      {% comment %} grid-template-columns: {{ section.settings.image_first  | ternary: 'min(420px, 45%) 1fr', '1fr' }}; {% endcomment %}
      background: rgb(0 0 0 / 0.03);
      border-radius:.5rem;
      padding:1rem;
    }
    #tl-{{ section.id }} img{width:100%;height:auto;display:block;border-radius:.375rem}
    #tl-{{ section.id }} .tl-card__title{margin:0 0 .25rem;font-size:1.125rem;line-height:1.35}
    #tl-{{ section.id }} .tl-card__text{margin:0}

    /* ---- Responsive: allow smaller fixed min on narrow screens ---- */
    @media (min-width: 740px){
      #tl-{{ section.id }} .tl-slide{min-width: clamp(var(--card-min), 44vw, var(--card-max));}
    }
    @media (min-width: 1100px){
      #tl-{{ section.id }} .tl-slide{min-width: clamp(var(--card-min), 33vw, var(--card-max));}
    }
  </style>

  <script>
    (function () {
      const root = document.getElementById('tl-{{ section.id }}');
      if (!root) return;

      const viewport = root.querySelector('.timeline__viewport');
      const slides = Array.from(root.querySelectorAll('.tl-slide'));
      const years = Array.from(root.querySelectorAll('.tl-year'));

      // Scroll to a given slide index
      function scrollToIndex(i) {
        const el = slides[i];
        if (!el) return;
        el.scrollIntoView({ behavior: 'smooth', inline: 'start', block: 'nearest' });
      }

      // Click a year -> scroll to card
      years.forEach((btn) => {
        btn.addEventListener('click', () => {
          const idx = +btn.dataset.index || 0;
          scrollToIndex(idx);
        });
      });

      // Keep active year in sync while scrolling
      const io = new IntersectionObserver(
        (entries) => {
          // find the most visible card near the left edge
          let best = { idx: 0, vis: 0 };
          for (const e of entries) {
            const idx = slides.indexOf(e.target);
            const vis = e.intersectionRatio;
            if (vis > best.vis) best = { idx, vis };
          }
          years.forEach((y, k) => y.classList.toggle('is-active', k === best.idx));
          years.forEach((y, k) => y.setAttribute('aria-selected', String(k === best.idx)));
        },
        {
          root: viewport,
          threshold: [0.01, 0.25, 0.5, 0.75, 1],
        }
      );
      slides.forEach((s) => io.observe(s));

      // Keyboard support when viewport is focused
      root.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowRight') {
          viewport.scrollBy({ left: viewport.clientWidth * 0.6, behavior: 'smooth' });
        } else if (e.key === 'ArrowLeft') {
          viewport.scrollBy({ left: -viewport.clientWidth * 0.6, behavior: 'smooth' });
        }
      });

      // Optional: make shift+wheel scroll sideways
      viewport.addEventListener(
        'wheel',
        (e) => {
          if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
            viewport.scrollLeft += e.deltaY;
          }
        },
        { passive: true }
      );

      // Ensure first is marked active initially
      years.forEach((y, k) => y.setAttribute('aria-selected', String(k === 0)));
    })();
  </script>

  {% schema %}
{
  "name": "Timeline",
  "tag": "section",
  "class": "section-timeline",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "Our Story" },
    { "type": "text", "id": "aria_label", "label": "ARIA label", "default": "Product history timeline" },
    { "type": "text", "id": "slide_padding", "label": "Card outer padding (CSS)", "default": "0" },
    { "type": "checkbox", "id": "image_first", "label": "Image left (two-column card)", "default": true }
  ],
  "blocks": [
    {
      "type": "entry",
      "name": "Year slide",
      "settings": [
        { "type": "text", "id": "year", "label": "Year", "default": "1970" },
        { "type": "image_picker", "id": "image", "label": "Image" },
        { "type": "text", "id": "image_alt", "label": "Image alt text" },
        { "type": "text", "id": "title", "label": "Title", "default": "Title" },
        { "type": "richtext", "id": "text", "label": "Text", "default": "<p>Short description.</p>" }
      ]
    }
  ],
  "max_blocks": 50,
  "presets": [
    {
      "name": "Timeline",
      "category": "Image"
    }
  ]
}
  {% endschema %}
</section>
