{% comment %}
  Product recommendations section shown on the product detail page.
  Fetches Shopify's recommended products API and renders a simple grid.
{% endcomment %}

{% assign limit = section.settings.products_to_show | default: 4 %}

<product-recommendations
  class="related-products"
  data-section-id="{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ limit }}"
  data-limit="{{ limit }}"
>
  {% assign has_recommendations = recommendations.performed and recommendations.products_count > 0 %}

  {% if has_recommendations %}
    <div class="related-products__inner">
      {% if section.settings.heading != blank %}
        <h2 class="related-products__heading">{{ section.settings.heading }}</h2>
      {% endif %}
      <div class="related-products__grid">
        {% for recommendation in recommendations.products limit: limit %}
          {% render 'product-card', product: recommendation %}
        {% endfor %}
      </div>
    </div>
  {% else %}
    <div class="related-products__placeholder" aria-hidden="true"></div>
  {% endif %}
</product-recommendations>

<script>
  (function () {
    var scriptEl = document.currentScript;
    if (!scriptEl) return;
    var sectionEl = scriptEl.previousElementSibling;
    if (!sectionEl || sectionEl.tagName.toLowerCase() !== 'product-recommendations') return;

    if (sectionEl.querySelector('.related-products__grid')) {
      sectionEl.setAttribute('data-loaded', 'true');
      return;
    }

    var url = sectionEl.getAttribute('data-url');
    if (!url) return;

    fetch(url)
      .then(function (response) {
        if (!response.ok) throw new Error('Network error');
        return response.text();
      })
      .then(function (html) {
        var doc = document.createElement('div');
        doc.innerHTML = html;
        var fresh = doc.querySelector('product-recommendations');
        if (!fresh) return;
        sectionEl.innerHTML = fresh.innerHTML;
        sectionEl.setAttribute('data-loaded', 'true');
      })
      .catch(function (err) {
        console.warn('Recommendations fetch failed', err);
      });
  })();
</script>

{% schema %}
{
  "name": "Related products",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "You may also like"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "label": "Products to show",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 4
    }
  ],
  "enabled_on": {
    "templates": ["product"]
  }
}
{% endschema %}
